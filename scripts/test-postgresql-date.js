#!/usr/bin/env node

const { query } = require("../dist/database/scripts/connection");

async function testPostgresqlDate() {
  try {
    console.log("üß™ Test des dates PostgreSQL...\n");

    const expiredToken = "expired-token-pg-test";

    // Utiliser une date PostgreSQL directement
    await query(
      'UPDATE "user" SET "resetToken" = $1, "resetTokenExpiration" = NOW() - INTERVAL \'1 hour\' WHERE email = $2',
      [expiredToken, "admin@example.com"]
    );

    console.log("1. Token expir√© cr√©√© avec date PostgreSQL (NOW() - 1 hour)");

    // Tester la requ√™te
    const result = await query(
      'SELECT id, "resetTokenExpiration", NOW() as current_time FROM "user" WHERE "resetToken" = $1',
      [expiredToken]
    );

    console.log("2. Token trouv√©:", result.rows[0]);

    // Tester la condition d'expiration
    const result2 = await query(
      'SELECT id FROM "user" WHERE "resetToken" = $1 AND "resetTokenExpiration" > NOW()',
      [expiredToken]
    );

    console.log("3. R√©sultat de la condition d'expiration:", result2.rows);

    if (result2.rows.length === 0) {
      console.log("‚úÖ Le token expir√© est correctement rejet√©");
    } else {
      console.log("‚ùå Le token expir√© est incorrectement accept√©");
    }
  } catch (error) {
    console.error("‚ùå Erreur:", error.message);
    console.error("Stack:", error.stack);
  }
}

testPostgresqlDate();
