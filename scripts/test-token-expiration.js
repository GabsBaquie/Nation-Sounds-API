#!/usr/bin/env node

const { UserService } = require("../dist/src/services/UserService");

async function testTokenExpiration() {
  try {
    console.log("üß™ Test de l'expiration des tokens...\n");

    // Cr√©er un utilisateur de test
    const user = await UserService.findByEmail("admin@example.com");
    if (!user) {
      console.log("‚ùå Utilisateur admin non trouv√©");
      return;
    }

    console.log("1. Utilisateur trouv√©:", user.email);

    // Cr√©er un token expir√©
    const expiredToken = "expired-token-test";
    const pastExpiration = new Date(Date.now() - 3600000); // 1 heure dans le pass√©

    console.log("2. Cr√©ation d'un token expir√©...");
    const updateResult = await UserService.updateResetToken(
      user.email,
      expiredToken,
      pastExpiration
    );
    console.log("Token cr√©√©:", updateResult);

    // Tester la r√©initialisation avec le token expir√©
    console.log("3. Test de r√©initialisation avec token expir√©...");
    const resetResult = await UserService.resetPassword(
      expiredToken,
      "newPassword123"
    );
    console.log("R√©sultat de r√©initialisation:", resetResult);

    if (resetResult) {
      console.log("‚ùå Le token expir√© a √©t√© accept√© (probl√®me !)");
    } else {
      console.log("‚úÖ Le token expir√© a √©t√© rejet√© (correct !)");
    }
  } catch (error) {
    console.error("‚ùå Erreur:", error.message);
    console.error("Stack:", error.stack);
  }
}

testTokenExpiration();
